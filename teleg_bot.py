# –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –¥–ª—è –≤–∑–∞–∏–º–æ–∂–µ–π—Å—Ç–≤–∏—è —Å —Ñ–∞–π–ª–∞–º–∏ –≤–∏–¥–µ–æ
import configparser  # —á–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
import datetime
import os

import telebot
from telebot import types
from telebot.types import ReplyKeyboardMarkup, KeyboardButton


if os.name == 'posix':
    video_cam = f'/home/lives/–í–∏–¥–µ–æ'  # –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–º–µ–Ω–∏—Ç—å
    sl = '/'
else:
    video_cam = f'c:\video'  # –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–º–µ–Ω–∏—Ç—å
    sl = "'\'"
video_len = len(os.listdir(video_cam)) # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–ø–æ–∫ –≤–∏–¥–µ–æ


if os.name == 'posix':#
    screenshot_dir=f"/home/lives/–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è" # –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –Ω—É–∂–Ω—ã–π –ø—É—Ç—å
    sl = '/'
else:
    screenshot_dir = f"c:\–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
    sl = "'\'"
foto_len = len(os.listdir(screenshot_dir))  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–ø–æ–∫ —Ñ–æ—Ç–æ


config = configparser.ConfigParser() # –ø–æ–º–µ—â–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
with open('info.ini', 'r') as f: # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    config.read_file(f)

tel_key = config.get('section1', 'tel_bot') # –≤—ã–±–∏—Ä–∞–µ–º –∫–ª—é—á –∏–∑ —Ñ–∞–π–ª–∞
userid = config.get('section1', 'userid')
VideoBot = telebot.TeleBot(f'{tel_key}') # —Ç–æ–∫–µ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –±–æ—Ç–∞

# –≤–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True, one_time_keyboard=True)
#–î–µ–ª–∞–µ–º –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
button1 = KeyboardButton("–í–ò–î–ï–û üìπ")
button2 = KeyboardButton("–§–û–¢–û üì∑")
markup.add(button1, button2) # –≤—ã–≤–æ–¥–∏–º –∏—Ö –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
button3 = KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ç–æ–∫')
markup.add(button3)


@VideoBot.message_handler(commands=['start'])
def start_message(message):
    VideoBot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é:", reply_markup=markup)


@VideoBot.message_handler(content_types=['text'])
def message_user(message):
    #–≤—ã–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    us = types.InlineKeyboardMarkup()
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫–∏ —Å –≤–∏–¥–µ–æ
    if (message.from_user.id == 0 or message.from_user.id == int(userid)) and message.text.lower() == '–≤–∏–¥–µ–æ üìπ':

        # —Å—á–∏—Ç–∞–µ–º —Å–∫–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –ø–∞–ø–æ–∫ –∏ –≤—ã–≤–æ–¥–∏–º–≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
        for i in range (video_len):
            # –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
            buti = types.InlineKeyboardButton(f'{os.listdir(video_cam)[i]}', callback_data=f'skan_video_{os.listdir(video_cam)[i]}')
            us.add(buti)
##
    if (message.from_user.id == 0 or message.from_user.id == int(userid)) and message.text.lower() == '—Ñ–æ—Ç–æ üì∑':
        # —Å—á–∏—Ç–∞–µ–º —Å–∫–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –ø–∞–ø–æ–∫ –∏ –≤—ã–≤–æ–¥–∏–º–≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
        for ii in range (foto_len):
            # –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
            buti = types.InlineKeyboardButton(f'{os.listdir(screenshot_dir)[ii]}', callback_data=f'skan_foto_{os.listdir(screenshot_dir)[ii]}')
            us.add(buti)
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    VideoBot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –ø–∞–ø–∫—É:', reply_markup=us)


    # if inf_us:
    #     inf_us=None
    #     # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–ª–∞—Ä–º
    #     print ('fdsdfsdfsdfsdfsdfsdfsdfds')
    #     VideoBot.send_message(message.from_user.id, 'dsgfdsgjdslkgndfslknglkrjagljgvdslvn' )


    @VideoBot.callback_query_handler(func=lambda call: True)

    def callback_query(call):
        global up_load
        us2 = types.InlineKeyboardMarkup()

        if call.data[:10] == 'skan_video':
            video_fale = os.listdir(video_cam + sl + call.data[11:])
            for i in range(len(video_fale)):
                buti = types.InlineKeyboardButton(video_fale[i], callback_data=f'up{video_fale[i]}')
                us2.add(buti)
            VideoBot.send_message(call.from_user.id, f'–í—ã–±–µ—Ä–∏ —Ñ–∞–π–ª:', reply_markup=us2)
            up_load = f'{video_cam}{sl}{call.data[11:]}{sl}'


        elif call.data[:9] == 'skan_foto':
            foto_fale = os.listdir(f'{screenshot_dir}{sl}{call.data[10:]}')
            for i in range(len(foto_fale)):
                buti = types.InlineKeyboardButton(foto_fale[i], callback_data=f'up{foto_fale[i]}')
                us2.add(buti)
            VideoBot.send_message(call.from_user.id, f'–í—ã–±–µ—Ä–∏ —Ñ–∞–π–ª:', reply_markup=us2)
            up_load = f'{screenshot_dir}{sl}{call.data[10:]}{sl}'



        if call.data[:2] == 'up':
            file_path = f'{up_load}{call.data[2:]}'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ñ–∞–π–ª—É
            if os.path.exists(file_path):
                with open(file_path, 'rb') as f:
                    VideoBot.send_document(call.from_user.id, f)
            else:
                VideoBot.send_message(call.from_user.id, "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")






# while True:
#     try:
#         VideoBot.polling(none_stop=True)
#     except:
#         continue
VideoBot.polling(none_stop=True)
